from os import listdir, rename
import socket
import pathlib
from os.path import isfile, join
from datetime import datetime
import shutil

class malwareArchiver:
    filesToProcess=[]
    def __init__(self, config):
        print ("Malware Archiver Created..")
        self.config=config
        self.archiveData()

    def getFilenames(self):
        print (self.config)
        for folder in self.config['malwareSubFolders']:
            mypath=self.config['rootFolder']+folder
            onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
            for item in onlyfiles:
                filenameString=mypath+"/"+item
                if filenameString.endswith(".tgz") or filenameString.endswith(".DS_Store"):
                    continue
                else:
                    self.filesToProcess.append(mypath+"/"+item)

    def processFiles(self):
        for file in self.filesToProcess:
            creationDate=self.getMeta(file)
            self.renameFile(file, creationDate)

    def getMeta(self, file):
        fname = pathlib.Path(file)
        assert fname.exists(), f'No such file: {fname}'  # check that the file exists
        mtime = datetime.fromtimestamp(fname.stat().st_mtime)
        mtime=str(mtime)
        mtime=mtime.replace(" ","-")
        return mtime

    def renameFile(self, file, creationDate):
        hostname=socket.gethostname()
        newFileName=file
        newFileName=newFileName.replace(self.config['rootFolder'],"")
        newFileName=file.replace("/","_")
        newFileName = newFileName[1:]
        newFileName=self.config['completeFolder']+hostname+"-"+newFileName+"_"+creationDate+".tgz"
        print (newFileName)
        rename(file, newFileName)

    def archiveData(self):
        mypath=self.config['completeFolder']
        print ("::", mypath)
        onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
        for item in onlyfiles:
            filenameWithPath=self.config['completeFolder']+"/"+item
            newFileName=filenameWithPath.replace(self.config['completeFolder'], self.config['archiveFolder'])
            rename(filenameWithPath, newFileName)




